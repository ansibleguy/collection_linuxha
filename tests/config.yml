---

- name: Testing config
  hosts: node1
  gather_facts: no
  become: true
  vars_files:
    - "{{ lookup('ansible.builtin.env', 'TEST_SECRETS') }}"

  vars:
    test_grp: 'ANSIBLE_TEST_3_6'
    test_cln: 'ANSIBLE_TEST_3_5'

  tasks:
    - name: Getting config
      ansibleguy.linuxha.config:
      register: lha1

    - name: Checking return
      ansible.builtin.assert:
        that:
          - "'nodes' in lha1.data"
          - "'properties' in lha1.data"
          - lha1.data['nodes'] | length == 2

    - name: Creating dummy resources and constraints
      ansibleguy.linuxha.raw:
        cmd: "configure {{ item }}"
      when: not ansible_check_mode
      loop:
        - 'primitive ANSIBLE_TEST_3_1 IPaddr2 params ip=127.100.1.2 nic=lo'
        - 'primitive ANSIBLE_TEST_3_2 IPaddr2 params ip=127.100.1.3 nic=lo'
        - 'primitive ANSIBLE_TEST_3_3 IPaddr2 params ip=127.100.1.4 nic=lo'

        - 'primitive ANSIBLE_TEST_3_4 ocf:pacemaker:ping params host_list="1.1.1.1 8.8.8.8" op monitor interval=5s timeout=60 on-fail=restart'
        - "clone {{ test_cln }} ANSIBLE_TEST_3_4"

        - "group {{ test_grp }} ANSIBLE_TEST_3_1 ANSIBLE_TEST_3_2"
        - 'order ANSIBLE_TEST_3_7 Mandatory: ANSIBLE_TEST_3_3:start ANSIBLE_TEST_3_1:start'
        - 'location ANSIBLE_TEST_3_8 ANSIBLE_TEST_3_3 role=Started inf: node2'

    - name: Getting config
      ansibleguy.linuxha.config:
      register: lha2
      when: not ansible_check_mode

    - name: Checking return
      ansible.builtin.assert:
        that:
          - "'clones' in lha2.data"
          - "'groups' in lha2.data"
          - "'locations' in lha2.data"
          - "'nodes' in lha2.data"
          - "'orders' in lha2.data"
          - "'primitives' in lha2.data"
          - "'properties' in lha2.data"
          - lha2.data['clones'] | length == 1
          - lha2.data['groups'] | length == 1
          - lha2.data['locations'] | length == 1
          - lha2.data['nodes'] | length == 2
          - lha2.data['orders'] | length == 1
          - lha2.data['primitives'] | length == 4
          - lha2.data['clones'][test_cln] | length == 1
          - lha2.data['groups'][test_grp] | length == 2
      when: not ansible_check_mode

    - name: Getting config subset
      ansibleguy.linuxha.config:
        subset: ['properties', 'primitives']
      register: lha3
      when: not ansible_check_mode

    - name: Checking return
      ansible.builtin.assert:
        that:
          - "'clones' not in lha3.data"
          - "'groups' not in lha3.data"
          - "'locations' not in lha3.data"
          - "'nodes' not in lha3.data"
          - "'orders' not in lha3.data"
          - "'primitives' in lha3.data"
          - "'properties' in lha3.data"
          - lha3.data['primitives'] | length == 4
      when: not ansible_check_mode

    - name: Getting raw config
      ansibleguy.linuxha.config:
        raw: true
      register: lha4
      when: not ansible_check_mode

    - name: Checking raw return
      ansible.builtin.assert:
        that:
          - "'configuration' in lha4.data"
          - "'constraints' in lha4.data['configuration']"
          - "'rsc_location' in lha4.data['configuration']['constraints']"
          - "'crm_config' in lha4.data['configuration']"
          - "'cluster_property_set' in lha4.data['configuration']['crm_config']"
          - "'nodes' in lha4.data['configuration']"
          - "'node' in lha4.data['configuration']['nodes']"
          - "'resources' in lha4.data['configuration']"
          - "'clone' in lha4.data['configuration']['resources']"
          - "'group' in lha4.data['configuration']['resources']"
          - "'primitive' in lha4.data['configuration']['resources']"
      when: not ansible_check_mode

    - name: Stopping dummy resources (dependencies)
      ansibleguy.linuxha.raw:
        cmd: "resource stop {{ item }}"
        wait: true
      loop:
        - "{{ test_cln }}"
        - "{{ test_grp }}"
      when: not ansible_check_mode

    - name: Cleanup dummy resources (dependencies)
      ansibleguy.linuxha.raw:
        cmd: "configure delete {{ item }}"
        wait: true
      loop:
        - "{{ test_cln }}"
        - "{{ test_grp }}"
        - 'ANSIBLE_TEST_3_7'
        - 'ANSIBLE_TEST_3_8'
      when: not ansible_check_mode

    - name: Stopping dummy resources
      ansibleguy.linuxha.raw:
        cmd: "resource stop {{ item }}"
        wait: true
      loop:
        - 'ANSIBLE_TEST_3_4'
        - 'ANSIBLE_TEST_3_3'
        - 'ANSIBLE_TEST_3_2'
        - 'ANSIBLE_TEST_3_1'
      when: not ansible_check_mode

    - name: Cleanup dummy resource
      ansibleguy.linuxha.raw:
        cmd: "configure delete {{ item }}"
        wait: true
      loop:
        - 'ANSIBLE_TEST_3_4'
        - 'ANSIBLE_TEST_3_3'
        - 'ANSIBLE_TEST_3_2'
        - 'ANSIBLE_TEST_3_1'
      when: not ansible_check_mode
